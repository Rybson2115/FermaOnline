@model Survey


<form method="post" asp-action="Create">
    <input type="hidden" asp-for="ExperimentId" value=@(ViewContext.RouteData.Values["id"]) />
    <div class="border p-3">
        <div class="form-group row">
            <h2 class="text-black-50 pl-3">Add survey</h2>
        </div>

        <div class="row center">
            <div class="col-8">
                <p>Add data in time order</p>
                <div class="mb-3 row">
                    <label asp-for="SurveyDate"></label>
                    <div class="col-sm-10">
                        <input asp-for="SurveyDate" class=".form-control " />
                        <span asp-validation-for="SurveyDate" class="text-danger"></span>

                    </div>
                    <div class="mb-3 row">
                        <label asp-for="LoculusQuantity"></label>
                        <div class="col-sm-10">
                            <input asp-for="LoculusQuantity" class="form-control " />
                            <span asp-validation-for="LoculusQuantity" class="text-danger"></span>

                        </div>
                    </div>
                    @{int count = 0;
                        char[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
                        for (int i = 0; i < ViewBag.CageNumber; i++)
                        {
                            <div class="sb-3 row">
                                <label asp-for="@Model.Cages[i].CageQuantity">@alphabet[count] cage quantity</label>
                                <div class="col-sm-10">
                                    <input asp-for="@Model.Cages[i].CageQuantity" id="@alphabet[count]Quantity" class="form-control " />
                                    <span asp-validation-for="Cages[i].CageQuantity" class="text-danger"></span>

                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label asp-for="@Model.Cages[i].GroupWeight">@alphabet[count] cage group weight</label>
                                <div class="col-sm-10">
                                    <input type="number" step="0.01" id="@alphabet[count]Weight" asp-for="@Model.Cages[i].GroupWeight" class="form-control " />
                                    <span asp-validation-for="Cages[i].GroupWeight" class="text-danger"></span>
                                </div>
                            </div>
                            count++;
                        }
                    }
                    @if (ViewBag.IsFirstSurvay == true)
                    {
                        <div class="mb-3 row">
                            <label asp-for="DayOfLife"></label>
                            <div class="col-sm-10">
                                <input asp-for="DayOfLife" id="Day" />
                            </div>
                        </div>
                        <script>
                            let DictValue = [];
                            let DictKey = [];
                            const alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
                             @{
                                 var dict = FermaOnline.Models.TemplateCurve.DefaultValuePig;

                                          @foreach (var d in dict)
                                          {
                                             @: DictKey.push("@d.Key");
                                             @: DictValue.push(parseFloat(@d.Value));
                                           }
                                 @:const cageNumber=@ViewBag.CageNumber;
                              }

                            var Quantity = [];
                            var Weight = [];
                            var QuantityValue = [];
                            var WeightValue = [];

                            for (i = 0; i < cageNumber; i++) {

                                Quantity[i] = document.getElementById(alphabet[i] + "Quantity")
                                QuantityValue[i] = 0;
                                Quantity[i].addEventListener('change', (event) => { QuantityValue[Quantity.indexOf(event.target)] = event.target.valueAsNumber;});
                                Quantity[i].addEventListener('change', updateDayValue);

                                Weight[i] = document.getElementById(alphabet[i] + "Weight")
                                WeightValue[i] = 0;
                                Weight[i].addEventListener('change', (event) => { WeightValue[Weight.indexOf(event.target)] = event.target.valueAsNumber;});
                                Weight[i].addEventListener('change', updateDayValue);
                            }

                            const Day = document.getElementById('Day');


                            function updateDayValue() {

                                var check = 0;

                                for (var i = 0; i < cageNumber; i++)
                                    if (WeightValue[i] > 0 && QuantityValue[i] > 0)
                                        check++;
                              

                                if (check == cageNumber) {  

                                    var WeightValueSum = 0;
                                    var QuantityValueSum = 0;

                                    for (let i = 0; i < WeightValue.length; i++) {
                                        WeightValueSum += WeightValue[i];
                                    }
                                       

                                    for (let i = 0; i < QuantityValue.length; i++) {
                                        QuantityValueSum +=  QuantityValue[i];
                                    }

                                    var IndyvidualBodyWeight = WeightValueSum / QuantityValueSum;
 
                                    var ClosestValue = 0;
                                    var smallestDiff = Math.abs(IndyvidualBodyWeight - DictValue[0]);

                                    for (i = 1; i < DictValue.length; i++) {
                                        currentDiff = Math.abs(IndyvidualBodyWeight - DictValue[i]);
                                        if (currentDiff < smallestDiff) {
                                            smallestDiff = currentDiff;
                                            ClosestValue = i;
                                        }
                                    }

                                    DayValue = DictKey[ClosestValue];

                                    Day.placeholder = "suggested value: " + DayValue;
                                }
                                else
                                    Day.placeholder = "";
                            }

                        </script>
                    }
                    else
                    {
                        <div class="mb-3 row">
                            <label asp-for="LoculusFeedInTake"></label>
                            <div class="col-sm-10">
                                <input asp-for="LoculusFeedInTake" class="form-control" />
                                <span asp-validation-for="LoculusFeedInTake" class="text-danger"></span>

                            </div>
                        </div>
                    }
                    <div class="form-group row">
                        <div class="col-12 offset-1 row">
                            <div class="col-4">
                                <input type="submit" class="btn btn-primary w-75" value="create" />
                            </div>
                            <div class="col-4">
                                <a asp-controller="Experiment" asp-action="Show" asp-route-Id=@(ViewContext.RouteData.Values["id"]) class="btn btn-danger w-75">Back</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

